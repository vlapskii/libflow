//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "lendings_detail")]
pub struct Model {
    pub lending_id: Option<i32>,
    pub isn: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::books::Entity",
        from = "Column::Isn",
        to = "super::books::Column::Isn",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Books,
    #[sea_orm(
        belongs_to = "super::lendings::Entity",
        from = "Column::LendingId",
        to = "super::lendings::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Lendings,
}

impl Related<super::books::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Books.def()
    }
}

impl Related<super::lendings::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Lendings.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
