//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "books")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub isn: String,
    pub publisher_id: Option<i32>,
    pub year_of_release: i16,
    pub age_rating: i16,
    pub title: String,
    pub count: i16,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::lendings_detail::Entity")]
    LendingsDetail,
    #[sea_orm(
        belongs_to = "super::publishers::Entity",
        from = "Column::PublisherId",
        to = "super::publishers::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Publishers,
}

impl Related<super::lendings_detail::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::LendingsDetail.def()
    }
}

impl Related<super::publishers::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Publishers.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
